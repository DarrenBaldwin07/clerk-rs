/*
 * Clerk Backend API
 *
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProxyCheck {
	#[serde(rename = "object")]
	pub object: Object,
	#[serde(rename = "id")]
	pub id: String,
	#[serde(rename = "domain_id")]
	pub domain_id: String,
	#[serde(rename = "last_run_at")]
	pub last_run_at: i64,
	#[serde(rename = "proxy_url")]
	pub proxy_url: String,
	#[serde(rename = "successful")]
	pub successful: bool,
	#[serde(rename = "created_at")]
	pub created_at: i64,
	#[serde(rename = "updated_at")]
	pub updated_at: i64,
}

impl ProxyCheck {
	pub fn new(
		object: Object,
		id: String,
		domain_id: String,
		last_run_at: i64,
		proxy_url: String,
		successful: bool,
		created_at: i64,
		updated_at: i64,
	) -> ProxyCheck {
		ProxyCheck {
			object,
			id,
			domain_id,
			last_run_at,
			proxy_url,
			successful,
			created_at,
			updated_at,
		}
	}
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
	#[serde(rename = "proxy_check")]
	ProxyCheck,
}

impl Default for Object {
	fn default() -> Object {
		Self::ProxyCheck
	}
}
