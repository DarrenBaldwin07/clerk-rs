/*
 * Clerk Backend API
 *
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */
use crate::validators::input;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RevokeOrganizationInvitationRequest {
	/// The ID of the user that revokes the invitation. Must be an administrator in the organization.
	#[serde(rename = "requesting_user_id")]
	pub requesting_user_id: String,
}

impl RevokeOrganizationInvitationRequest {
	pub fn new(requesting_user_id: String) -> RevokeOrganizationInvitationRequest {
		RevokeOrganizationInvitationRequest { requesting_user_id }
	}

	/// Validates that the required fields meet the expected criteria
	pub fn validate(&self) -> Result<(), String> {
		// Validate requesting_user_id
		if !input::validate_user_id(&self.requesting_user_id) {
			return Err(format!("Invalid user ID format: {}", self.requesting_user_id));
		}

		Ok(())
	}
}
