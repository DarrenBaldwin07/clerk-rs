/*
 * Clerk Backend API
 *
 * The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@clerk.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Saml {
	#[serde(rename = "status")]
	pub status: Status,
	#[serde(rename = "strategy")]
	pub strategy: Strategy,
	#[serde(rename = "external_verification_redirect_url", deserialize_with = "Option::deserialize")]
	pub external_verification_redirect_url: Option<String>,
	#[serde(
		rename = "error",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub error: Option<Option<Box<crate::models::SamlError>>>,
	#[serde(rename = "expire_at")]
	pub expire_at: i64,
	#[serde(
		rename = "attempts",
		default,
		with = "::serde_with::rust::double_option",
		skip_serializing_if = "Option::is_none"
	)]
	pub attempts: Option<Option<i64>>,
}

impl Saml {
	pub fn new(status: Status, strategy: Strategy, external_verification_redirect_url: Option<String>, expire_at: i64) -> Saml {
		Saml {
			status,
			strategy,
			external_verification_redirect_url,
			error: None,
			expire_at,
			attempts: None,
		}
	}
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
	#[serde(rename = "unverified")]
	Unverified,
	#[serde(rename = "verified")]
	Verified,
	#[serde(rename = "failed")]
	Failed,
	#[serde(rename = "expired")]
	Expired,
	#[serde(rename = "transferable")]
	Transferable,
}

impl Default for Status {
	fn default() -> Status {
		Self::Unverified
	}
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Strategy {
	#[serde(rename = "saml")]
	Saml,
}

impl Default for Strategy {
	fn default() -> Strategy {
		Self::Saml
	}
}
